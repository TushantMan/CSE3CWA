{"ast":null,"code":"var _jsxFileName = \"/app/src/components/List.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Task(props) {\n  console.log(props);\n  function onChange() {\n    const updatedTask = {\n      id: props.id,\n      description: props.description,\n      completed: !props.completed\n    };\n    fetch(`http://localhost:5002/api/tasks/${props.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedTask)\n    }).then(response => response.json()).then(() => {\n      props.setTasks(tasks => tasks.map(task => {\n        if (task.id === props.id) {\n          return updatedTask;\n        } else {\n          return task;\n        }\n      }));\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n  function onClick() {\n    // Find the task we want to delete and remove it\n    fetch(`http://localhost:5002/api/tasks/${props.id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      props.setTasks(tasks => tasks.filter(task => task.id !== props.id));\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onClick,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), \" \", props.description, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: props.completed,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 80\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n}\n_c = Task;\nfunction List(props) {\n  _s();\n  const [newTask, setNewTask] = useState(\"\");\n  function onChange(event) {\n    setNewTask(event.target.value);\n  }\n  function onClick() {\n    fetch('http://localhost:5002/api/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        description: newTask,\n        completed: false\n      })\n    }).then(response => response.json()).then(data => {\n      props.setTasks(tasks => [...tasks, data]);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    setNewTask(\"\"); // Clear the input field\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Header\",\n      children: \"Contractor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"mainForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"firstLabel\",\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"contractorInput\",\n        placeholder: \"Add a new task\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onClick,\n        className: \"primaryButton\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: props.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n          setTasks: props.setTasks,\n          id: task.id,\n          description: task.description,\n          completed: task.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 31\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n}\n_s(List, \"4D3TTGns9x2jT45i0XsiEmEZ47k=\");\n_c2 = List;\nexport default List;\nvar _c, _c2;\n$RefreshReg$(_c, \"Task\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Task","props","console","log","onChange","updatedTask","id","description","completed","fetch","method","headers","body","JSON","stringify","then","response","json","setTasks","tasks","map","task","catch","error","onClick","filter","children","type","fileName","_jsxFileName","lineNumber","columnNumber","checked","_c","List","_s","newTask","setNewTask","event","target","value","data","className","placeholder","_c2","$RefreshReg$"],"sources":["/app/src/components/List.js"],"sourcesContent":["import { useState } from 'react';\n\nfunction Task(props) {\n\n\tconsole.log(props);\n\n\tfunction onChange() {\n\t\tconst updatedTask = {\n\t\t\tid: props.id,\n\t\t\tdescription: props.description,\n\t\t\tcompleted: !props.completed\n\t\t};\n\t\tfetch(`http://localhost:5002/api/tasks/${props.id}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(updatedTask)\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(() => {\n\t\t\tprops.setTasks(tasks => tasks.map(task => {\n\t\t\tif (task.id === props.id) {\n\t\t\t\treturn updatedTask;\n\t\t\t} else {\n\t\t\t\treturn task;\n\t\t\t}\n\t\t\t}));\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error:', error);\n\t\t});\n\t}\n\n\tfunction onClick() {\n\t\t// Find the task we want to delete and remove it\n\t\tfetch(`http://localhost:5002/api/tasks/${props.id}`, {\n\t\t\tmethod: 'DELETE'\n\t\t})\n\t\t.then(() => {\n\t\t\tprops.setTasks(tasks => tasks.filter(task => task.id !== props.id));\n\t\t\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error:', error);\n\t\t}\n\t\t);\t\n\t}\n\n\treturn (\n\t\t<li><button type=\"button\" onClick={onClick}>X</button> { props.description } <input type=\"checkbox\" checked={props.completed} onChange={onChange}/></li>\n\t);\n}\n\nfunction List(props) {\n\n\tconst [newTask, setNewTask] = useState(\"\");\n\n\tfunction onChange(event) {\n\t\tsetNewTask(event.target.value);\n\t}\n\n\tfunction onClick() {\n\t\tfetch('http://localhost:5002/api/tasks', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({ description: newTask, completed: false })\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tprops.setTasks(tasks => [...tasks, data]);\n\t\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error:', error);\n\t\t\t});\n\t\t\tsetNewTask(\"\"); // Clear the input field\n\t\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h1 className='Header'>Contractor</h1>\n\t\t\t<form className='mainForm'>\n\t\t\t<h2 className='firstLabel'>Contacts</h2><br></br>\n\t\t\t<input type=\"text\" className= \"contractorInput\" placeholder=\"Add a new task\" onChange={onChange} />\n\t\t\t<button type=\"button\" onClick={onClick} className='primaryButton'>Add</button>\n\t\t\t<ul>\n\t\t\t\t{ props.tasks.map(task => <Task setTasks={props.setTasks} id={task.id} description={task.description} completed={task.completed} />) }\n\t\t\t</ul>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default List;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}